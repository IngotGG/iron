[versions]
kotlin = "2.0.10"
kotlinx-serialization-plugin = "2.0.0-RC3"
kotlinx-serialization = "1.7.0-RC"
kotlinx-coroutines = "1.9.0-RC"
gson = "2.11.0"
slf4j = "2.0.13"
sqlite = "3.46.0.0"
h2 = "2.3.232"
postgres = "42.7.4"
evo = "1.3"
logback = "1.5.8"
ksp = "2.0.10-1.0.24"
kotlinpoet = "1.18.1"
kotest = "5.9.1"
kotest-testcontainers = "2.0.2"
testcontainers-postgresql = "1.20.1"

[plugins]
kotlin = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlinx-serialization-plugin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }

[libraries]
kotlinx-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
slf4j = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
evo = { module = "org.atteo:evo-inflector", version.ref = "evo" }
ksp-api = { module = "com.google.devtools.ksp:symbol-processing-api", version.ref = "ksp" }
kotlinpoet-jvm = { module = "com.squareup:kotlinpoet-jvm", version.ref = "kotlinpoet" }
kotlinpoet-ksp = { module = "com.squareup:kotlinpoet-ksp", version.ref = "kotlinpoet" }

test-kotlinx-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines" }
test-driver-sqlite = { module = "org.xerial:sqlite-jdbc", version.ref = "sqlite" }
test-driver-h2 = { module = "com.h2database:h2", version.ref = "h2" }
test-driver-postgresql = { module = "org.postgresql:postgresql", version.ref = "postgres" }
test-logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
test-kotest = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
test-kotest-assertions = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
test-kotest-property = { module = "io.kotest:kotest-property", version.ref = "kotest" }
test-testcontainers-postgresql = { module = "org.testcontainers:postgresql", version.ref = "testcontainers-postgresql" }
test-kotest-testcontainers = { module = "io.kotest.extensions:kotest-extensions-testcontainers", version.ref = "kotest-testcontainers" }

[bundles]
testing = [
    "test-kotlinx-coroutines",
    "kotlinx-serialization",
    "test-logback",
    "test-kotest-testcontainers",
    "test-testcontainers-postgresql",
    "test-kotest",
    "test-kotest-assertions",
    "test-kotest-property",
    "test-driver-sqlite",
    "test-driver-h2",
    "test-driver-postgresql",
]
kotlinpoet = [
    "kotlinpoet-jvm",
    "kotlinpoet-ksp",
]